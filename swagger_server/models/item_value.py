# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ItemValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, gold: int=None, silver: int=None, copper: int=None):  # noqa: E501
        """ItemValue - a model defined in Swagger

        :param gold: The gold of this ItemValue.  # noqa: E501
        :type gold: int
        :param silver: The silver of this ItemValue.  # noqa: E501
        :type silver: int
        :param copper: The copper of this ItemValue.  # noqa: E501
        :type copper: int
        """
        self.swagger_types = {
            'gold': int,
            'silver': int,
            'copper': int
        }

        self.attribute_map = {
            'gold': 'gold',
            'silver': 'silver',
            'copper': 'copper'
        }
        self._gold = gold
        self._silver = silver
        self._copper = copper

    @classmethod
    def from_dict(cls, dikt) -> 'ItemValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Item_value of this ItemValue.  # noqa: E501
        :rtype: ItemValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gold(self) -> int:
        """Gets the gold of this ItemValue.


        :return: The gold of this ItemValue.
        :rtype: int
        """
        return self._gold

    @gold.setter
    def gold(self, gold: int):
        """Sets the gold of this ItemValue.


        :param gold: The gold of this ItemValue.
        :type gold: int
        """

        self._gold = gold

    @property
    def silver(self) -> int:
        """Gets the silver of this ItemValue.


        :return: The silver of this ItemValue.
        :rtype: int
        """
        return self._silver

    @silver.setter
    def silver(self, silver: int):
        """Sets the silver of this ItemValue.


        :param silver: The silver of this ItemValue.
        :type silver: int
        """

        self._silver = silver

    @property
    def copper(self) -> int:
        """Gets the copper of this ItemValue.


        :return: The copper of this ItemValue.
        :rtype: int
        """
        return self._copper

    @copper.setter
    def copper(self, copper: int):
        """Sets the copper of this ItemValue.


        :param copper: The copper of this ItemValue.
        :type copper: int
        """

        self._copper = copper
