# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.world_politics_kingdoms import WorldPoliticsKingdoms  # noqa: F401,E501
from swagger_server import util


class WorldPolitics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, kingdoms: List[WorldPoliticsKingdoms]=None):  # noqa: E501
        """WorldPolitics - a model defined in Swagger

        :param kingdoms: The kingdoms of this WorldPolitics.  # noqa: E501
        :type kingdoms: List[WorldPoliticsKingdoms]
        """
        self.swagger_types = {
            'kingdoms': List[WorldPoliticsKingdoms]
        }

        self.attribute_map = {
            'kingdoms': 'kingdoms'
        }
        self._kingdoms = kingdoms

    @classmethod
    def from_dict(cls, dikt) -> 'WorldPolitics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The World_politics of this WorldPolitics.  # noqa: E501
        :rtype: WorldPolitics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kingdoms(self) -> List[WorldPoliticsKingdoms]:
        """Gets the kingdoms of this WorldPolitics.


        :return: The kingdoms of this WorldPolitics.
        :rtype: List[WorldPoliticsKingdoms]
        """
        return self._kingdoms

    @kingdoms.setter
    def kingdoms(self, kingdoms: List[WorldPoliticsKingdoms]):
        """Sets the kingdoms of this WorldPolitics.


        :param kingdoms: The kingdoms of this WorldPolitics.
        :type kingdoms: List[WorldPoliticsKingdoms]
        """

        self._kingdoms = kingdoms
